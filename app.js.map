{"version":3,"sources":["src/server/app.js"],"names":[],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAIA;;;;AACA;;;;;;AAJA;;AAEA;AAIA,IAAM,MAAM,wBAAZ;;AAEA;AACA,IAAI,GAAJ,CAAQ,OAAR,EAAiB,eAAK,IAAL,CAAU,SAAV,EAAqB,OAArB,CAAjB;AACA,IAAI,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;;AAEA;AACA;AACA,IAAI,GAAJ,CAAQ,sBAAO,KAAP,CAAR;AACA,IAAI,GAAJ,CAAQ,qBAAW,IAAX,EAAR;AACA,IAAI,GAAJ,CAAQ,qBAAW,UAAX,CAAsB,EAAE,UAAU,KAAZ,EAAtB,CAAR;AACA,IAAI,GAAJ,CAAQ,6BAAR;AACA,IAAI,GAAJ,CAAQ,kBAAQ,MAAR,CAAe,eAAK,IAAL,CAAU,SAAV,EAAqB,QAArB,CAAf,CAAR;;AAEA,IAAI,GAAJ,CAAQ,GAAR;AACA,IAAI,GAAJ,CAAQ,QAAR;;AAEA;AACA,IAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAoB;AAC1B,MAAM,MAAM,IAAI,KAAJ,CAAU,WAAV,CAAZ;AACA,MAAI,MAAJ,GAAa,GAAb;AACA,OAAK,GAAL;AACD,CAJD;;AAMA;AACA,IAAI,GAAJ,CAAQ,UAAC,GAAD,EAAM,GAAN,EAAW,GAAX,CAAc,YAAd,EAA+B;AACrC;AACA,MAAI,MAAJ,CAAW,OAAX,GAAqB,IAAI,OAAzB;AACA,MAAI,MAAJ,CAAW,KAAX,GAAmB,IAAI,GAAJ,CAAQ,GAAR,CAAY,KAAZ,MAAuB,aAAvB,GAAuC,GAAvC,GAA6C,EAAhE;;AAEA;AACA,MAAI,MAAJ,CAAW,IAAI,MAAJ,IAAc,GAAzB;AACA,MAAI,MAAJ,CAAW,OAAX;AACD,CARD;;kBAUe,G","file":"app.js","sourcesContent":["import express from 'express';\nimport path from 'path';\nimport logger from 'morgan';\nimport cookieParser from 'cookie-parser';\nimport bodyParser from 'body-parser';\n// import favicon from 'serve-favicon'; // TODO: not use\n\n// import routers\nimport index from './routes/index';\nimport users from './routes/users';\n\nconst app = express();\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\n\n// uncomment after placing your favicon in /public\n// app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\napp.use('/', index);\napp.use('/users', users);\n\n// catch 404 and forward to error handler\napp.use((req, res, next) => {\n  const err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handler\napp.use((err, req, res/* , next */) => {\n  // set locals, only providing error in development\n  res.locals.message = err.message;\n  res.locals.error = req.app.get('env') === 'development' ? err : {};\n\n  // render the error page\n  res.status(err.status || 500);\n  res.render('error');\n});\n\nexport default app;\n"]}